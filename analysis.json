{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "paper-number-input.html",
      "properties": [
        {
          "name": "tabIndex",
          "type": "number",
          "description": "The tabindex for this input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label for this input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 8
            },
            "end": {
              "line": 120,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "number",
          "description": "The number that represents the current value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Set to true to disable this input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 8
            },
            "end": {
              "line": 134,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "Returns true if the value is invalid.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Set to true to mark the input as required.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "The error message to display when the input is invalid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "Set to true to disable the floating label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 8
            },
            "end": {
              "line": 164,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "Set to true to always float the label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autoValidate",
          "type": "boolean",
          "description": "Set to true to auto-validate the input value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 8
            },
            "end": {
              "line": 177,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 183,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "min",
          "type": "number",
          "description": "The number that indicates the minimum value. It is used to compute\n`_min`. If `min` is not a relative integer, `_min` falls back\nto 0.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number",
          "description": "The number that indicates the maximum value. It is used to compute\n`_max`. If `max` is not a number, `_max` falls back\nto Number.POSITIVE_INFINITY. If `max` is inferior to `_min`, `_max`\nfalls back to `_min`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "number",
          "description": "The number that indicates the value increment granularity for\nstepUp and stepDown actions. It is used to compute `_step`.\nIf `step` is not a number, `_step` falls back to 0.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 215,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If true, the value can't change due to user input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 8
            },
            "end": {
              "line": 234,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_ariaDescribedBy",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 240,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_ariaLabelledBy",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 8
            },
            "end": {
              "line": 246,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_min",
          "type": "number",
          "description": "The minimum value the input have.\nEquals to `min` or 0 if `min` is not a number.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 8
            },
            "end": {
              "line": 256,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_max",
          "type": "number",
          "description": "The maximum value the input have.\nEquals to `max` or Number.POSITIVE_INFINITY if `max` is not a number.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 8
            },
            "end": {
              "line": 266,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_step",
          "type": "number",
          "description": "The value increment granularity for stepUp and stepDown actions\nEquals to `step` or 0 if `step` is not a number.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "fallbackValue",
          "type": "number",
          "description": "Default fallback when value is not a number.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "stepDownIcon",
          "type": "string",
          "description": "The icon key for the step down button. You will need to import an\nicon set for the icon to appear.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 8
            },
            "end": {
              "line": 291,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"remove\""
        },
        {
          "name": "stepUpIcon",
          "type": "string",
          "description": "The icon key for the step up button. You will need to import an\nicon set for the icon to appear.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"add\""
        }
      ],
      "methods": [
        {
          "name": "_compute_step",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_compute_min",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 314,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ]
        },
        {
          "name": "_compute_max",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            },
            {
              "name": "_min"
            }
          ]
        },
        {
          "name": "_rangeValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "fallbackValue"
            },
            {
              "name": "_min"
            },
            {
              "name": "_max"
            }
          ]
        },
        {
          "name": "toRange",
          "description": "Rectrict the given value between `_min` and `_max`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Number",
              "description": "The value to restrict"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "The ranged value or NaN if the input value is\n                       not a number."
          }
        },
        {
          "name": "toRangeMax",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "toRangeMin",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "stepUp",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "stepDown",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 6
            },
            "end": {
              "line": 363,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "add",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 370,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "_computeStepDownButtonDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 372,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "_min"
            },
            {
              "name": "disabled"
            }
          ]
        },
        {
          "name": "_computeStepUpButtonDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 6
            },
            "end": {
              "line": 378,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "_max"
            },
            {
              "name": "disabled"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo",
          "description": "Sandbox snippet"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 104,
          "column": 12
        },
        "end": {
          "line": 380,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "tab-index",
          "description": "The tabindex for this input.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 8
            },
            "end": {
              "line": 114,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "label",
          "description": "The label for this input.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 8
            },
            "end": {
              "line": 120,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "The number that represents the current value.",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "disabled",
          "description": "Set to true to disable this input.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 8
            },
            "end": {
              "line": 134,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "invalid",
          "description": "Returns true if the value is invalid.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "Set to true to mark the input as required.",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "The error message to display when the input is invalid.",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 8
            },
            "end": {
              "line": 164,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "auto-validate",
          "description": "Set to true to auto-validate the input value.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 8
            },
            "end": {
              "line": 177,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 183,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "autofocus",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "min",
          "description": "The number that indicates the minimum value. It is used to compute\n`_min`. If `min` is not a relative integer, `_min` falls back\nto 0.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "max",
          "description": "The number that indicates the maximum value. It is used to compute\n`_max`. If `max` is not a number, `_max` falls back\nto Number.POSITIVE_INFINITY. If `max` is inferior to `_min`, `_max`\nfalls back to `_min`.",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "step",
          "description": "The number that indicates the value increment granularity for\nstepUp and stepDown actions. It is used to compute `_step`.\nIf `step` is not a number, `_step` falls back to 0.",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 215,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "name",
          "description": "The name of this element.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "readonly",
          "description": "If true, the value can't change due to user input.",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 8
            },
            "end": {
              "line": 234,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fallback-value",
          "description": "Default fallback when value is not a number.",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "step-down-icon",
          "description": "The icon key for the step down button. You will need to import an\nicon set for the icon to appear.",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 8
            },
            "end": {
              "line": 291,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "step-up-icon",
          "description": "The icon key for the step up button. You will need to import an\nicon set for the icon to appear.",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "step-changed",
          "description": "Fired when the `step` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "prefix",
          "range": {
            "file": "paper-number-input.html",
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 47
            }
          }
        },
        {
          "description": "",
          "name": "suffix",
          "range": {
            "file": "paper-number-input.html",
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 47
            }
          }
        }
      ],
      "tagname": "paper-number-input"
    }
  ]
}
